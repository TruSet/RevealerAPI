version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
        environment:
          DEP_VERSION: 0.5.0
    working_directory: /go/src/github.com/TruSet/TruSetAPIServer
    steps:
      - checkout
      - restore_cache:
          keys:
          - revealer-api-vendor-{{ checksum "Gopkg.lock" }}
          - revealer-api-vendor-
      - run: curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
      - run: dep ensure --vendor-only
      - save_cache:
          key: revealer-api-vendor-{{ checksum "vendor/vendor.json" }}
          paths:
            - vendor
  test:
    docker:
      - image: circleci/golang:1.9
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: ci-postgres
          POSTGRES_DB: circle-test
    working_directory: /go/src/github.com/TruSet/TruSetAPIServer
    steps:
      - checkout
      - restore_cache:
          keys:
          - revealer-api-vendor-{{ checksum "Gopkg.lock" }}
          - revealer-api-vendor-
      - run: dep ensure
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: go test
  deploy:
    machine:
      enabled: true
    environment:
      HEROKU_APP: truset-revealer-api-tokens
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "18:55:22:87:b8:b2:2e:d1:4d:2f:fd:48:bd:17:49:40"
      - run:
          name: Run Heroku setup script
          command: bash .circleci/setup-heroku.sh
      - run:
          name: deploy sections branch to heroku
          command: |
            heroku git:remote -a $HEROKU_APP
            git config user.email "circleci@truset.com"
            git config user.name "circleci bot"
            git fetch heroku
            git push --force git@heroku.com:$HEROKU_APP.git HEAD:refs/heads/master
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
