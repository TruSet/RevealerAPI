version: 2.1
commands:
  deploy-heroku:
    parameters:
      heroku_app_name:
        type: string
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "18:55:22:87:b8:b2:2e:d1:4d:2f:fd:48:bd:17:49:40"
      - run:
          name: Run Heroku setup script
          command: bash .circleci/setup-heroku.sh
      - run:
          name: deploy branch
          command: |
            heroku git:remote -a << parameters.heroku_app_name >>
            git config user.email "circleci@truset.com"
            git config user.name "circleci bot"
            git fetch heroku
            git push --force git@heroku.com:<< parameters.heroku_app_name >>.git HEAD:refs/heads/master
jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/TruSet/RevealerAPI
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go build ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  test:
    docker:
      - image: circleci/golang:1.13
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: ci-postgres
          POSTGRES_DB: circle-test
    working_directory: /go/src/github.com/TruSet/RevealerAPI
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
            DATABASE_URL: postgresql://ci-postgres@localhost:5432/circle-test?sslmode=disable
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: go test
  deploy-tokens-staging:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-tokens-staging"
  deploy-bond-demo:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-bond-demo"
  deploy-tegula-demo:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-tegula-demo"
  deploy-tokens-beta:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-tokens-beta"
  deploy-realesta-beta:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-realesta-beta"
  deploy-petroleu-demo:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-petroleu-demo"
  deploy-cofi-beta:
    machine:
      enabled: true
    steps:
      - deploy-heroku:
          heroku_app_name: "truset-revealer-cofi-beta"
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-tokens-staging:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-tokens-beta:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-bond-demo:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-tegula-demo:
          requires:
            - test
          filters:
            branches:
              only: tegula
      - deploy-tokens-beta:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-realesta-beta:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-petroleu-demo:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-cofi-beta:
          requires:
            - test
          filters:
            branches:
              only: master
